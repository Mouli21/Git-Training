Git & GitHub
------------
* Git(local)     -> version control system used for tracking the changes & colloaborate with team
* Github(Remote) -> web based hosting service for git repo.	

Git
---
* From eclipse > Window > Perspective > Open Perspective > Other and select Git.
* From the project > Right Click > Show in terminal > Terminal 

From reomte repo to local branch initial stage
----------------------------------------------
* git clone followed by our git code url.
* Move to the directory by using command (cd FolerName)

From local branch to remote repo
--------------------------------
* Create a file & do certain activities.
* run git status -> to know about current status of the working directory
* using git add command add the changes from working directory to staging area. (git add .)
* From working directory to local git to move use command git commit aling with commit message (git commit -m "commit message")
* After commit then push the local changes to remote repo using git push command
* git push orgin main 
* Make sure the steps to follow -> git status > git add > git status > git commit > git push
* Whenever modified we need to use git add command.

From remote to local repo
-------------------------
* use git pull command to pull the latest source and merge with local repo.


Creating repo in local & push to remote
---------------------------------------
* Create the folder / package in the project.
* Inside the folder create files and save.
* Now in the terminal use git init command to initiate of creating a local repository
* Make sure your terminal control where it lies.

* use git status > git add > git commit 
* git push will not work because this is different folder / package so we need to connect to that folder.

* Create a new repo in remote.
* After create in eclipse terminal use command to connect to new remote repo (git remote add origin url) 
* to change the branch name give git branch -M "Branch Name"
* to check the current branch use command (git branch)

Branching & merging Concept
---------------------------
* git branch -a command is used to check how many branches available in the remote repo.
* Create a new branch in remote repo.
* After creating what all changes available in main branch will copy the same to another branch as well.
* changing from one branch to another -> git checkout branchName
* In sub branch if any files added and moved to remote repo those added file will visible only to the sub branch
* Same as like in eclipse also only for the particular branch that file will show.
* git-diff command is used to compare the difference between two branches.(git diff sub-branch)


* Now from main branch use git merge subbranchname command to merge your sub branch with main branch (git merge sub-branch)

Git pull request
----------------
* In live project, we don't have access to merge with main branch so we need to raise pull request.
* Click pull request > New Pull request > select the brach which need to be compared.
* Create pull request > Add description > create pull request
* Now manager will get the request he will review & approve.

Add some more topics which you learned
